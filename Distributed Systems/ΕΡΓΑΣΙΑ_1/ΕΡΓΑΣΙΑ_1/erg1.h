/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _ERG1_H_RPCGEN
#define _ERG1_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct int_vector {
	int *array;
	int length;
};
typedef struct int_vector int_vector;

struct float_vector {
	float a;
	struct int_vector vector;
};
typedef struct float_vector float_vector;

struct intpair {
	int a;
	int b;
};
typedef struct intpair intpair;

struct floatvec {
	float *array;
	int length;
};
typedef struct floatvec floatvec;

#define CALC_PROG 0x20000001
#define CALC_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define AVERAGE 1
extern  float * average_1(int_vector *, CLIENT *);
extern  float * average_1_svc(int_vector *, struct svc_req *);
#define MAX_MIN 2
extern  intpair * max_min_1(int_vector *, CLIENT *);
extern  intpair * max_min_1_svc(int_vector *, struct svc_req *);
#define MULTIPLY 3
extern  floatvec * multiply_1(float_vector *, CLIENT *);
extern  floatvec * multiply_1_svc(float_vector *, struct svc_req *);
extern int calc_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define AVERAGE 1
extern  float * average_1();
extern  float * average_1_svc();
#define MAX_MIN 2
extern  intpair * max_min_1();
extern  intpair * max_min_1_svc();
#define MULTIPLY 3
extern  floatvec * multiply_1();
extern  floatvec * multiply_1_svc();
extern int calc_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_int_vector (XDR *, int_vector*);
extern  bool_t xdr_float_vector (XDR *, float_vector*);
extern  bool_t xdr_intpair (XDR *, intpair*);
extern  bool_t xdr_floatvec (XDR *, floatvec*);

#else /* K&R C */
extern bool_t xdr_int_vector ();
extern bool_t xdr_float_vector ();
extern bool_t xdr_intpair ();
extern bool_t xdr_floatvec ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_ERG1_H_RPCGEN */
